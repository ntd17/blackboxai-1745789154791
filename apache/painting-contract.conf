# HTTP Virtual Host - Redirect all traffic to HTTPS
<VirtualHost *:80>
    ServerName ${HOSTNAME}
    ServerAdmin ${CONTACT_EMAIL}
    
    # Logging
    ErrorLog ${APACHE_LOG_DIR}/painting-contract-error.log
    CustomLog ${APACHE_LOG_DIR}/painting-contract-access.log combined
    
    # Redirect all HTTP traffic to HTTPS
    RewriteEngine On
    RewriteCond %{HTTPS} off
    RewriteRule ^(.*)$ https://%{HTTP_HOST}%{REQUEST_URI} [L,R=301]
    
    # Allow Let's Encrypt challenge response
    Alias /.well-known/acme-challenge/ /var/www/certbot/.well-known/acme-challenge/
    <Directory "/var/www/certbot/.well-known/acme-challenge/">
        Options None
        AllowOverride None
        ForceType text/plain
        Require all granted
    </Directory>
</VirtualHost>

# HTTPS Virtual Host
<VirtualHost *:443>
    ServerName ${HOSTNAME}
    ServerAdmin ${CONTACT_EMAIL}
    
    # SSL Configuration
    SSLEngine on
    SSLCertificateFile /etc/letsencrypt/live/${HOSTNAME}/fullchain.pem
    SSLCertificateKeyFile /etc/letsencrypt/live/${HOSTNAME}/privkey.pem
    
    # Logging
    ErrorLog ${APACHE_LOG_DIR}/painting-contract-ssl-error.log
    CustomLog ${APACHE_LOG_DIR}/painting-contract-ssl-access.log combined
    
    # Proxy settings
    ProxyPreserveHost On
    
    # WebSocket support
    RewriteEngine On
    RewriteCond %{HTTP:Upgrade} =websocket [NC]
    RewriteRule /(.*)  ws://flask-app:5000/$1 [P,L]
    
    # Proxy all requests to Flask application
    ProxyPass / http://flask-app:5000/
    ProxyPassReverse / http://flask-app:5000/
    
    # Set headers for proxy
    RequestHeader set X-Forwarded-Proto "https"
    RequestHeader set X-Forwarded-Port "443"
    
    # Static files caching
    <LocationMatch "^/static/">
        ExpiresActive On
        ExpiresDefault "access plus 1 month"
        Header append Cache-Control "public"
    </LocationMatch>
    
    # Security headers
    Header always set Content-Security-Policy "default-src 'self' https: data: 'unsafe-inline' 'unsafe-eval'; connect-src 'self' https: wss:; frame-ancestors 'self'"
    Header always set X-Frame-Options "SAMEORIGIN"
    Header always set X-XSS-Protection "1; mode=block"
    Header always set X-Content-Type-Options "nosniff"
    Header always set Referrer-Policy "strict-origin-when-cross-origin"
    Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains"
    
    # Enable HTTP/2
    Protocols h2 http/1.1
    
    # Compression
    AddOutputFilterByType DEFLATE text/html text/plain text/xml text/css text/javascript application/javascript application/json
    
    # Error documents
    ErrorDocument 404 /404
    ErrorDocument 500 /500
    
    # Proxy timeout settings
    ProxyTimeout 300
    ProxyBadHeader Ignore
    
    # Health check location
    <Location /health>
        ProxyPass http://flask-app:5000/health
        ProxyPassReverse http://flask-app:5000/health
    </Location>
    
    # Admin panel location
    <Location /admin>
        ProxyPass http://flask-app:5000/admin
        ProxyPassReverse http://flask-app:5000/admin
        # Additional security for admin area
        Header always set Cache-Control "private, no-cache, no-store, must-revalidate"
        Header always set Pragma "no-cache"
        Header always set Expires "0"
    </Location>
    
    # API documentation location
    <Location /docs>
        ProxyPass http://flask-app:5000/docs
        ProxyPassReverse http://flask-app:5000/docs
    </Location>
    
    # Block access to sensitive files
    <FilesMatch "^\.">
        Require all denied
    </FilesMatch>
    
    # Rate limiting (if mod_ratelimit is available)
    <IfModule mod_ratelimit.c>
        <Location />
            SetOutputFilter RATE_LIMIT
            SetEnv rate-limit 400
        </Location>
    </IfModule>
</VirtualHost>
