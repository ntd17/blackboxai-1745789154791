version: '3.8'

services:
  # Flask Application Backend
  flask-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: flask-app
    restart: unless-stopped
    expose:
      - "5000"
    environment:
      - FLASK_APP=wsgi.py
      - FLASK_ENV=${FLASK_ENV:-production}
      - APP_NAME=${APP_NAME}
      - HOSTNAME=${HOSTNAME}
      - APP_LOGO_URL=${APP_LOGO_URL}
      - DATABASE_URL=${DATABASE_URL}
      - SMTP_SERVER=${SMTP_SERVER}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - STORACHA_API_KEY=${STORACHA_API_KEY}
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}
      - CONTACT_EMAIL=${CONTACT_EMAIL}
      - CONTACT_WHATSAPP=${CONTACT_WHATSAPP}
      - LANGUAGES_ENABLED=${LANGUAGES_ENABLED}
      - GANACHE_URL=http://ganache:8545
      - CHAIN_ID=1337
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./app:/app/app
      - ./data/ml_models:/app/data/ml_models
      - ./data/sqlite:/app/data/sqlite
      - ./data/contracts:/app/data/contracts
      - ./logs:/app/logs
    networks:
      - backend
    depends_on:
      - ganache
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - backend
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Apache Reverse Proxy
  apache:
    image: httpd:latest
    container_name: apache-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./apache/painting-contract.conf:/usr/local/apache2/conf/extra/painting-contract.conf
      - ./apache/certs:/etc/letsencrypt
      - ./apache/httpd.conf:/usr/local/apache2/conf/httpd.conf
      - ./logs/apache:/usr/local/apache2/logs
    networks:
      - backend
    depends_on:
      - flask-app
    environment:
      - APP_NAME=${APP_NAME}
      - HOSTNAME=${HOSTNAME}
    restart: unless-stopped

  # Ganache Blockchain
  ganache:
    image: trufflesuite/ganache:latest
    container_name: ganache
    expose:
      - "8545"
    volumes:
      - ./data/ganache:/ganache_data
    command:
      - --server.host=0.0.0.0
      - --chain.chainId=1337
      - --chain.networkId=1337
      - --database.dbPath=/ganache_data
      - --wallet.deterministic=true
      - --wallet.totalAccounts=10
      - --wallet.defaultBalance=1000
      - --miner.blockTime=0
      - --chain.hardfork=london
    networks:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8545"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

networks:
  backend:
    driver: bridge

volumes:
  ml_models:
    driver: local
  sqlite_data:
    driver: local
  ganache_data:
    driver: local
  contract_data:
    driver: local
  redis_data:
    driver: local
